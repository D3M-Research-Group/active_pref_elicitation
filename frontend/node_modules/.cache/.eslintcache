[{"/Users/patrick/ape_code/src/index.js":"1","/Users/patrick/ape_code/src/reportWebVitals.js":"2","/Users/patrick/ape_code/src/App.js":"3","/Users/patrick/ape_code/src/Form.js":"4","/Users/patrick/ape_code/src/Card.js":"5","/Users/patrick/ape_code/src/BarChart.js":"6","/Users/patrick/ape_code/src/hooks/useD3.js":"7"},{"size":578,"mtime":1629057706097,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1629056125524,"results":"10","hashOfConfig":"9"},{"size":528,"mtime":1629056125521,"results":"11","hashOfConfig":"9"},{"size":11185,"mtime":1629142598586,"results":"12","hashOfConfig":"9"},{"size":4812,"mtime":1629137913046,"results":"13","hashOfConfig":"9"},{"size":2289,"mtime":1629137603998,"results":"14","hashOfConfig":"9"},{"size":293,"mtime":1629137408525,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"iv3qz1",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/patrick/ape_code/src/index.js",[],["33","34"],"/Users/patrick/ape_code/src/reportWebVitals.js",[],"/Users/patrick/ape_code/src/App.js",[],"/Users/patrick/ape_code/src/Form.js",[],"/Users/patrick/ape_code/src/Card.js",["35"],"import React from 'react';\nimport BarChart from './BarChart';\nimport './Card.scss'\n\nclass Card extends React.Component {\n    render() {\n      return (<div className=\"card\">{this.props.children}</div>)\n    }\n  }\n  \n  class SelectableCard extends React.Component {\n  \n    render() {\n      var isSelected = this.props.selected ? \"selected\" : \"\";\n      var className = \"selectable \" + isSelected;\n      return (\n        <Card>\n          <div className={className} onClick={this.props.onClick}>\n            {this.props.children}\n            <div className=\"check\"><span className=\"checkmark\">âœ”</span></div>\n          </div>\n        </Card>\n      );\n    }\n  }\n  \n  class SelectableTitleCard extends React.Component {\n  \n    render() {\n      var {\n        title,\n        description,\n        selected,\n        data\n      } = this.props;\n      return (\n        \n          <div className=\"col-lg-6\">\n            <SelectableCard onClick={this.props.onClick}\n              selected={selected}>\n              <div className=\"content\">\n                <h1 className=\"title\">{title}</h1>\n                <p className=\"description\">{description}</p>\n                <BarChart data={data}/>\n              </div>\n            </SelectableCard>\n          </div>\n        \n      );\n    }\n  }\n  \n  class SelectableCardList extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      var selected = props.multiple ? [] : -1;\n      var initialState = {\n        selected: selected\n      };\n      this.state = initialState;\n    }\n  \n    onItemSelected(index) {\n      this.setState((prevState, props) => {\n        if (props.multiple) {\n          var selectedIndexes = prevState.selected;\n          var selectedIndex = selectedIndexes.indexOf(index);\n          if (selectedIndex > -1) {\n            selectedIndexes.splice(selectedIndex, 1);\n            props.onChange(selectedIndexes);\n          } else {\n            if (!(selectedIndexes.length >= props.maxSelectable)) {\n              selectedIndexes.push(index);\n              props.onChange(selectedIndexes);\n            }\n          }\n          return {\n            selected: selectedIndexes\n          };\n        } else {\n          props.onChange(index);\n          return {\n            selected: index\n          }\n        }\n      });\n    }\n  \n    render() {\n      var {\n        contents,\n        multiple\n      } = this.props;\n  \n      var content = contents.map((cardContent, i) => {\n        var {\n          title,\n          description,\n          data,\n          selected\n        } = cardContent;\n        var selected = multiple ? this.state.selected.indexOf(i) > -1 : this.state.selected === i;\n        return (\n          \n            <SelectableTitleCard key={i} \n            title={title} description={description} data={data}\n            selected={selected} \n            onClick={(e) => this.onItemSelected(i)} />\n          \n        );\n      });\n      return (\n          <div className=\"cardlist\">\n            <div className=\"row\">\n              {content}\n            </div>\n          </div>\n      );\n    }\n  }\n  \n//   class Example extends React.Component {\n//     onListChanged(selected) {\n//       this.setState({\n//         selected: selected\n//       });\n//     }\n//     submit() {\n//       window.alert(\"Selected: \" + this.state.selected);\n//     }\n//     render() {\n//       return (\n//         <div className=\"column\">\n//             <h1 className=\"title\">{this.props.title}</h1>\n//             <SelectableCardList \n//               multiple={this.props.multiple}\n//               maxSelectable={this.props.maxSelectable}\n//               contents={this.props.cardContents}\n//               onChange={this.onListChanged.bind(this)}/>\n//             <button className=\"card\" onClick={(e) => this.submit() }>\n//               Get selected\n//             </button>\n//         </div>);\n//     }\n//   }\n  \n  \n//   var teams = [{\n//     title: \"FC Barcelona\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Real Madrid\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Bayern Munich\",\n//     description: \"Germany\"\n//   }, {\n//     title: \"Juventus\",\n//     description: \"Italy\"\n//   }];\n  \n//   var genres = [{\n//     title: \"Google\",\n//     description: \"Mountain View, CA\"\n//   }, {\n//     title: \"Apple\",\n//     description: \"Cupertino, CA\"\n//   }, {\n//     title: \"Microsoft\",\n//     description: \"Redmond, WA\"\n//   }, {\n//     title: \"Facebook\",\n//     description: \"Menlo Park, CA\"\n//   }];\n  \n//   class App extends React.Component {\n//     render() {\n//       return (\n//         <div>\n//           <Example title=\"Pick a team\" cardContents={teams} />\n//           <Example title=\"Choose brands (3 max)\" cardContents={genres} multiple maxSelectable={3} />\n//         </div>\n//       );\n//     }\n//   }\nexport default SelectableCardList;","/Users/patrick/ape_code/src/BarChart.js",[],"/Users/patrick/ape_code/src/hooks/useD3.js",["36","37"],"import React from 'react';\n\nimport * as d3 from 'd3';\n\n\nexport const useD3 = (renderChartFn, dependencies) => {\n\n    const ref = React.useRef();\n\n\n    React.useEffect(() => {\n\n        renderChartFn(d3.select(ref.current));\n\n        return () => {};\n\n      }, dependencies);\n\n    return ref;\n\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":103,"column":13,"nodeType":"44","messageId":"45","endLine":103,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":17,"column":10,"nodeType":"44","endLine":17,"endColumn":22},{"ruleId":"46","severity":1,"message":"48","line":17,"column":10,"nodeType":"44","endLine":17,"endColumn":22,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-redeclare","'selected' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook React.useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [renderChartFn]",{"range":"55","text":"56"},[259,271],"[renderChartFn]"]