{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/ape_code/src/Form.js\";\nimport React from 'react';\nimport logo from './logo192.png';\nimport SelectableCardList from \"./Card\";\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        username,\n        password\n      } = this.state;\n      alert(`Your registration detail: \\n \n             Email: ${email} \\n \n             Username: ${username} \\n\n             Password: ${password}`);\n    };\n\n    this.submitChoice = () => {\n      console.log(this.state.selected);\n      this.state.userChoices.push(this.state.selected);\n      console.log(this.state.userChoices);\n\n      if (this.state.currentStep === this.maxSteps) {\n        // then we want to submit the results\n        this.finalSubmit();\n      } else {\n        // move to next question\n        this._next();\n      }\n    };\n\n    this._chooseA = () => {\n      alert(`You chose option A!`);\n    };\n\n    this._chooseB = () => {\n      alert(`You chose option B!`);\n    };\n\n    this.state = {\n      currentStep: 1,\n      userChoices: [],\n      email: '',\n      username: '',\n      password: '',\n      selected: -1\n    };\n    this.maxSteps = 3;\n    this.updateSelected = this.updateSelected.bind(this);\n    this.submitChoice = this.submitChoice.bind(this);\n    this.choiceData = [[{\n      title: \"FC Barcelona\",\n      description: \"Spain\"\n    }, {\n      title: \"Bayern Munich\",\n      description: \"Germany\"\n    }], [{\n      title: \"Apple\",\n      description: \"Cupertino, CA\"\n    }, {\n      title: \"Microsoft\",\n      description: \"Redmond, WA\"\n    }], [{\n      title: \"Apples\",\n      description: \"some text\"\n    }, {\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }]];\n    this.teams = [{\n      title: \"FC Barcelona\",\n      description: \"Spain\"\n    }, {\n      title: \"Bayern Munich\",\n      description: \"Germany\"\n    }];\n    this.techCompanies = [{\n      title: \"Apple\",\n      description: \"Cupertino, CA\"\n    }, {\n      title: \"Microsoft\",\n      description: \"Redmond, WA\"\n    }];\n    this.fruit = [{\n      title: \"Apples\",\n      description: \"some text\"\n    }, {\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }];\n  }\n\n  // _next = () => {\n  _next() {\n    let currentStep = this.state.currentStep;\n    currentStep = currentStep >= 2 ? this.maxSteps : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  updateSelected(selected) {\n    this.setState({\n      selected: selected\n    });\n  }\n\n  finalSubmit() {\n    let [choice1, choice2, choice3] = this.state.userChoices;\n    alert(`Your choices: \\n \n             Choice 1: ${choice1} \\n \n             Choice 2: ${choice2} \\n\n             Choice 3: ${choice3}`);\n  }\n\n  nextButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep < 3) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary float-right\",\n        type: \"button\",\n        onClick: this._next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Active Preference Elicitation \\uD83D\\uDD2E \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step \", this.state.currentStep, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Step1, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        email: this.state.email,\n        data: this.choiceData[this.state.currentStep],\n        teams: this.teams,\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Step2, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        username: this.state.username,\n        companies: this.techCompanies,\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Step3, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        password: this.state.password,\n        fruit: this.fruit,\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a team\",\n      cardContents: props.teams,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Step1;\n\nfunction Step2(props) {\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a company\",\n      cardContents: props.companies,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Step2;\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null;\n  } // return(\n  //   <React.Fragment>\n  //   <div className=\"form-group\">\n  //     <label htmlFor=\"password\">Password</label>\n  //     <input\n  //       className=\"form-control\"\n  //       id=\"password\"\n  //       name=\"password\"\n  //       type=\"password\"\n  //       placeholder=\"Enter password\"\n  //       value={props.password}\n  //       onChange={props.handleChange}\n  //       />      \n  //   </div>\n  //   <button className=\"btn btn-success btn-block\">Sign up</button>\n  //   </React.Fragment>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a fruit\",\n      cardContents: props.fruit,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = Step3;\n\nclass Example extends React.Component {\n  onListChanged(selected) {\n    this.setState({\n      selected: selected\n    });\n    this.props.updateSelected(selected);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SelectableCardList, {\n        multiple: this.props.multiple,\n        maxSelectable: this.props.maxSelectable,\n        contents: this.props.cardContents,\n        onChange: this.onListChanged.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card\",\n        onClick: this.props.submitChoice,\n        children: \"Choose option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this);\n  }\n\n} //   ReactDOM.render(<MasterForm />, document.getElementById('root'))\n\n\nexport default MasterForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"Step2\");\n$RefreshReg$(_c3, \"Step3\");","map":{"version":3,"sources":["/Users/patrick/ape_code/src/Form.js"],"names":["React","logo","SelectableCardList","MasterForm","Component","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","email","username","password","state","alert","submitChoice","console","log","selected","userChoices","push","currentStep","maxSteps","finalSubmit","_next","_chooseA","_chooseB","updateSelected","bind","choiceData","title","description","teams","techCompanies","fruit","choice1","choice2","choice3","nextButton","render","Step1","Step2","companies","Step3","Example","onListChanged","multiple","maxSelectable","cardContents"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo192.png';\nimport SelectableCardList from \"./Card\"\nimport './Form.css';\n\nclass MasterForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        currentStep: 1,\n        userChoices: [],\n        email:  '',\n        username: '',\n        password: '', \n        selected: -1\n      }\n      this.maxSteps = 3;\n      this.updateSelected = this.updateSelected.bind(this);\n      this.submitChoice = this.submitChoice.bind(this);\n    \n      this.choiceData = [\n        [{\n          title: \"FC Barcelona\",\n          description: \"Spain\"\n        }, {\n          title: \"Bayern Munich\",\n          description: \"Germany\"\n        }],\n        [{\n          title: \"Apple\",\n          description: \"Cupertino, CA\"\n        }, {\n            title: \"Microsoft\",\n            description: \"Redmond, WA\"\n        }],\n        [{\n          title: \"Apples\",\n            description: \"some text\"\n        },{\n            title: \"Oranges\",\n            description: \"Cara cara\"\n        }]\n      ];\n      this.teams = [{\n        title: \"FC Barcelona\",\n        description: \"Spain\"\n      }, {\n        title: \"Bayern Munich\",\n        description: \"Germany\"\n      }];\n    this.techCompanies = [{\n        title: \"Apple\",\n        description: \"Cupertino, CA\"\n    }, {\n        title: \"Microsoft\",\n        description: \"Redmond, WA\"\n    }];\n    this.fruit = [{\n      title: \"Apples\",\n      description: \"some text\"\n    },{\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }];\n    }\n  \n    handleChange = event => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })    \n    }\n     \n    handleSubmit = event => {\n      event.preventDefault()\n      const { email, username, password } = this.state\n      alert(`Your registration detail: \\n \n             Email: ${email} \\n \n             Username: ${username} \\n\n             Password: ${password}`)\n    }\n    \n    // _next = () => {\n    _next(){\n      let currentStep = this.state.currentStep\n      currentStep = currentStep >= 2? this.maxSteps: currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n\n    updateSelected(selected){\n        this.setState({\n        selected: selected\n        })\n    }\n\n    finalSubmit(){\n        let [choice1, choice2, choice3] = this.state.userChoices;\n        alert(`Your choices: \\n \n             Choice 1: ${choice1} \\n \n             Choice 2: ${choice2} \\n\n             Choice 3: ${choice3}`)\n    }\n\n    submitChoice = () => {\n        console.log(this.state.selected);\n        this.state.userChoices.push(this.state.selected);\n        console.log(this.state.userChoices);\n        if(this.state.currentStep === this.maxSteps){\n          // then we want to submit the results\n          this.finalSubmit();\n        } else{\n          // move to next question\n          this._next();\n        }\n        \n    }\n\n    _chooseA = () => {\n        alert(\n            `You chose option A!`\n        )\n    }\n\n    _chooseB = () => {\n        alert(\n            `You chose option B!`\n        )\n    }\n      \n    nextButton(){\n        let currentStep = this.state.currentStep;\n        if(currentStep <3){\n        return (\n            <button \n            className=\"btn btn-primary float-right\" \n            type=\"button\" onClick={this._next}>\n            Next\n            </button>        \n        )\n        }\n        return null;\n    }\n    \n    render() {    \n      return (\n        <React.Fragment>\n        <h1>Active Preference Elicitation 🔮 </h1>\n        <p>Step {this.state.currentStep} </p> \n  \n        {/* <form onSubmit={this.handleSubmit}> */}\n        {/* <form> */}\n        {/* \n          render the form steps and pass required props in\n        */}\n          <Step1 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            email={this.state.email}\n            data={this.choiceData[this.state.currentStep]}\n            teams={this.teams}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step2 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            username={this.state.username}\n            companies={this.techCompanies}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step3 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            password={this.state.password}\n            fruit={this.fruit}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          {/* {this.previousButton()} */}\n          {/* {this.nextButton()} */}\n  \n        {/* </form> */}\n        </React.Fragment>\n      );\n    }\n  }\n  \n  function Step1(props) {\n    if (props.currentStep !== 1) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            {/* <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Enter email\"\n                value={props.email}\n                onChange={props.handleChange}\n                />    \n            </div> */}\n            <Example title=\"Pick a team\" cardContents={props.teams} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n        \n            \n      \n      \n    );\n  }\n  \n  function Step2(props) {\n    if (props.currentStep !== 2) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            {/* <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                className=\"form-control\"\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Enter username\"\n                value={props.username}\n                onChange={props.handleChange}\n                />\n            </div> */}\n            <Example title=\"Pick a company\" cardContents={props.companies} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n      \n    );\n  }\n  \n  function Step3(props) {\n    if (props.currentStep !== 3) {\n      return null\n    } \n    // return(\n    //   <React.Fragment>\n    //   <div className=\"form-group\">\n    //     <label htmlFor=\"password\">Password</label>\n    //     <input\n    //       className=\"form-control\"\n    //       id=\"password\"\n    //       name=\"password\"\n    //       type=\"password\"\n    //       placeholder=\"Enter password\"\n    //       value={props.password}\n    //       onChange={props.handleChange}\n    //       />      \n    //   </div>\n    //   <button className=\"btn btn-success btn-block\">Sign up</button>\n    //   </React.Fragment>\n    // );\n    return(\n      <div className=\"container\">\n        <Example title=\"Pick a fruit\" cardContents={props.fruit} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n      </div>\n    )\n  }\n\n  class Example extends React.Component {\n    onListChanged(selected) {\n        this.setState({\n        selected: selected\n        });\n        this.props.updateSelected(selected);\n    }\n    render() {\n      return (\n        <div className=\"column\">\n            <h1 className=\"title\">{this.props.title}</h1>\n            <SelectableCardList \n              multiple={this.props.multiple}\n              maxSelectable={this.props.maxSelectable}\n              contents={this.props.cardContents}\n              onChange={this.onListChanged.bind(this)}/>\n              {/* On click we want to move to the next choice and store this information.\n              I think we can use _next but we need to add in the info for the choices */}\n            <button className=\"card\" onClick={this.props.submitChoice}>\n              Choose option\n            </button>\n        </div>);\n    }\n  }\n  \n\n    \n  \n//   ReactDOM.render(<MasterForm />, document.getElementById('root'))\nexport default MasterForm;"]},"metadata":{},"sourceType":"module"}