{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/ape_code/src/Form.js\";\nimport React from 'react';\nimport SelectableCardList from \"./Card\";\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        username,\n        password\n      } = this.state;\n      alert(`Your registration detail: \\n \n             Email: ${email} \\n \n             Username: ${username} \\n\n             Password: ${password}`);\n    };\n\n    this.displayChoices = () => {\n      let [choice1, choice2, choice3] = this.state.userChoices;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Choice 1: \", this.choiceData[0][choice1]['title']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Choice 2: \", this.choiceData[1][choice2]['title']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Choice 3: \", this.choiceData[2][choice3]['title']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this);\n    };\n\n    this.submitChoice = () => {\n      console.log(this.state.selected);\n      this.state.userChoices.push(this.state.selected);\n      console.log(this.state.userChoices);\n\n      if (this.state.currentStep === this.maxSteps) {\n        // then we want to submit the results\n        this.finalSubmit();\n      } else {\n        // move to next question\n        this._next();\n      }\n    };\n\n    this._chooseA = () => {\n      alert(`You chose option A!`);\n    };\n\n    this._chooseB = () => {\n      alert(`You chose option B!`);\n    };\n\n    this.state = {\n      currentStep: 1,\n      userChoices: [],\n      email: '',\n      username: '',\n      password: '',\n      selected: -1\n    };\n    this.maxSteps = 3;\n    this.updateSelected = this.updateSelected.bind(this);\n    this.submitChoice = this.submitChoice.bind(this);\n    this.choiceData = [[{\n      title: \"FC Barcelona\",\n      description: \"Spain\"\n    }, {\n      title: \"Bayern Munich\",\n      description: \"Germany\"\n    }], [{\n      title: \"Apple\",\n      description: \"Cupertino, CA\"\n    }, {\n      title: \"Microsoft\",\n      description: \"Redmond, WA\"\n    }], [{\n      title: \"Apples\",\n      description: \"some text\"\n    }, {\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }]];\n    this.teams = [{\n      title: \"FC Barcelona\",\n      description: \"Spain\"\n    }, {\n      title: \"Bayern Munich\",\n      description: \"Germany\"\n    }];\n    this.techCompanies = [{\n      title: \"Apple\",\n      description: \"Cupertino, CA\"\n    }, {\n      title: \"Microsoft\",\n      description: \"Redmond, WA\"\n    }];\n    this.fruit = [{\n      title: \"Apples\",\n      description: \"some text\"\n    }, {\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }];\n  }\n\n  // _next = () => {\n  _next() {\n    let currentStep = this.state.currentStep;\n    currentStep = currentStep >= 2 ? this.maxSteps : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _goToEnd() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep === this.maxSteps) {\n      // update current step to go to end page\n      this.setState({\n        currentStep: this.maxSteps + 1\n      });\n    }\n  }\n\n  updateSelected(selected) {\n    this.setState({\n      selected: selected\n    });\n  }\n\n  finalSubmit() {\n    let [choice1, choice2, choice3] = this.state.userChoices;\n    alert(`Your choices: \\n \n             Choice 1: ${this.choiceData[0][choice1]['title']} \\n \n             Choice 2: ${this.choiceData[1][choice2]['title']} \\n\n             Choice 3: ${this.choiceData[2][choice3]['title']} \\n\n        This is where we will send the results back to the server`);\n\n    this._goToEnd();\n  }\n\n  nextButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep < 3) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary float-right\",\n        type: \"button\",\n        onClick: this._next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Active Preference Elicitation \\uD83D\\uDD2E \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step \", this.state.currentStep, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Step1, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        email: this.state.email,\n        data: this.choiceData[this.state.currentStep - 1],\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Step2, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        username: this.state.username,\n        data: this.choiceData[this.state.currentStep - 1],\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Step3, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        password: this.state.password,\n        data: this.choiceData[this.state.currentStep - 1],\n        updateSelected: this.updateSelected,\n        submitChoice: this.submitChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EndPage, {\n        currentStep: this.state.currentStep,\n        displayChoices: this.displayChoices,\n        maxSteps: this.maxSteps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a team\",\n      cardContents: props.data,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Step1;\n\nfunction Step2(props) {\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a company\",\n      cardContents: props.data,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Step2;\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      title: \"Pick a fruit\",\n      cardContents: props.data,\n      submitChoice: props.submitChoice,\n      updateSelected: props.updateSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = Step3;\n\nfunction EndPage(props) {\n  console.log(props.currentStep);\n\n  if (props.currentStep !== props.maxSteps + 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"All done!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thanks for particpating here are the choices you made:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }, this), props.displayChoices()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = EndPage;\n\nclass Example extends React.Component {\n  onListChanged(selected) {\n    this.setState({\n      selected: selected\n    });\n    this.props.updateSelected(selected);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SelectableCardList, {\n        multiple: this.props.multiple,\n        maxSelectable: this.props.maxSelectable,\n        contents: this.props.cardContents,\n        onChange: this.onListChanged.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card\",\n        onClick: this.props.submitChoice,\n        children: \"Choose option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this);\n  }\n\n} //   ReactDOM.render(<MasterForm />, document.getElementById('root'))\n\n\nexport default MasterForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"Step2\");\n$RefreshReg$(_c3, \"Step3\");\n$RefreshReg$(_c4, \"EndPage\");","map":{"version":3,"sources":["/Users/patrick/ape_code/src/Form.js"],"names":["React","SelectableCardList","MasterForm","Component","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","email","username","password","state","alert","displayChoices","choice1","choice2","choice3","userChoices","choiceData","submitChoice","console","log","selected","push","currentStep","maxSteps","finalSubmit","_next","_chooseA","_chooseB","updateSelected","bind","title","description","teams","techCompanies","fruit","_goToEnd","nextButton","render","Step1","data","Step2","Step3","EndPage","Example","onListChanged","multiple","maxSelectable","cardContents"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SelectableCardList from \"./Card\"\nimport './Form.css';\n\nclass MasterForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        currentStep: 1,\n        userChoices: [],\n        email:  '',\n        username: '',\n        password: '', \n        selected: -1\n      }\n      this.maxSteps = 3;\n      this.updateSelected = this.updateSelected.bind(this);\n      this.submitChoice = this.submitChoice.bind(this);\n    \n      this.choiceData = [\n        [{\n          title: \"FC Barcelona\",\n          description: \"Spain\"\n        }, {\n          title: \"Bayern Munich\",\n          description: \"Germany\"\n        }],\n        [{\n          title: \"Apple\",\n          description: \"Cupertino, CA\"\n        }, {\n            title: \"Microsoft\",\n            description: \"Redmond, WA\"\n        }],\n        [{\n          title: \"Apples\",\n            description: \"some text\"\n        },{\n            title: \"Oranges\",\n            description: \"Cara cara\"\n        }]\n      ];\n      this.teams = [{\n        title: \"FC Barcelona\",\n        description: \"Spain\"\n      }, {\n        title: \"Bayern Munich\",\n        description: \"Germany\"\n      }];\n    this.techCompanies = [{\n        title: \"Apple\",\n        description: \"Cupertino, CA\"\n    }, {\n        title: \"Microsoft\",\n        description: \"Redmond, WA\"\n    }];\n    this.fruit = [{\n      title: \"Apples\",\n      description: \"some text\"\n    },{\n      title: \"Oranges\",\n      description: \"Cara cara\"\n    }];\n    }\n  \n    handleChange = event => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })    \n    }\n     \n    handleSubmit = event => {\n      event.preventDefault()\n      const { email, username, password } = this.state\n      alert(`Your registration detail: \\n \n             Email: ${email} \\n \n             Username: ${username} \\n\n             Password: ${password}`)\n    }\n    \n    // _next = () => {\n    _next(){\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep >= 2? this.maxSteps: currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n\n    _goToEnd(){\n      let currentStep = this.state.currentStep;\n      if(currentStep === this.maxSteps){\n        // update current step to go to end page\n        this.setState({\n          currentStep: this.maxSteps + 1\n        })\n      }\n    }\n\n    updateSelected(selected){\n        this.setState({\n        selected: selected\n        })\n    }\n\n    finalSubmit(){\n        let [choice1, choice2, choice3] = this.state.userChoices;\n        alert(`Your choices: \\n \n             Choice 1: ${this.choiceData[0][choice1]['title']} \\n \n             Choice 2: ${this.choiceData[1][choice2]['title']} \\n\n             Choice 3: ${this.choiceData[2][choice3]['title']} \\n\n        This is where we will send the results back to the server`);\n        this._goToEnd();\n    }\n\n    displayChoices = () => {\n      let [choice1, choice2, choice3] = this.state.userChoices;\n        return(\n          <ul>\n            <li>\n              Choice 1: {this.choiceData[0][choice1]['title']}\n            </li>\n            <li>\n              Choice 2: {this.choiceData[1][choice2]['title']}\n            </li>\n            <li>\n              Choice 3: {this.choiceData[2][choice3]['title']}\n            </li>\n            \n          </ul>\n          \n          );\n    }\n\n    submitChoice = () => {\n        console.log(this.state.selected);\n        this.state.userChoices.push(this.state.selected);\n        console.log(this.state.userChoices);\n        if(this.state.currentStep === this.maxSteps){\n          // then we want to submit the results\n          this.finalSubmit();\n        } else{\n          // move to next question\n          this._next();\n        }\n        \n    }\n\n    _chooseA = () => {\n        alert(\n            `You chose option A!`\n        )\n    }\n\n    _chooseB = () => {\n        alert(\n            `You chose option B!`\n        )\n    }\n      \n    nextButton(){\n        let currentStep = this.state.currentStep;\n        if(currentStep <3){\n        return (\n            <button \n            className=\"btn btn-primary float-right\" \n            type=\"button\" onClick={this._next}>\n            Next\n            </button>        \n        )\n        }\n        return null;\n    }\n    \n    render() {    \n      return (\n        <React.Fragment>\n        <h1>Active Preference Elicitation 🔮 </h1>\n        <p>Step {this.state.currentStep} </p> \n  \n        {/* <form onSubmit={this.handleSubmit}> */}\n        {/* <form> */}\n        {/* \n          render the form steps and pass required props in\n        */}\n          <Step1 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            email={this.state.email}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step2 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            username={this.state.username}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step3 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            password={this.state.password}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n\n          <EndPage\n            currentStep={this.state.currentStep}\n            displayChoices={this.displayChoices}\n            maxSteps={this.maxSteps}\n          />\n          {/* {this.previousButton()} */}\n          {/* {this.nextButton()} */}\n  \n        {/* </form> */}\n        </React.Fragment>\n      );\n    }\n  }\n  \n  function Step1(props) {\n    if (props.currentStep !== 1) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            {/* <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Enter email\"\n                value={props.email}\n                onChange={props.handleChange}\n                />    \n            </div> */}\n            <Example title=\"Pick a team\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n        \n            \n      \n      \n    );\n  }\n  \n  function Step2(props) {\n    if (props.currentStep !== 2) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            <Example title=\"Pick a company\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n      \n    );\n  }\n  \n  function Step3(props) {\n    if (props.currentStep !== 3) {\n      return null\n    } \n    return(\n      <div className=\"container\">\n        <Example title=\"Pick a fruit\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n      </div>\n    )\n  }\n\n  function EndPage(props) {\n    console.log(props.currentStep)\n    if (props.currentStep !== props.maxSteps + 1) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n          <h1 className=\"title\">All done!</h1>\n          <p>\n            Thanks for particpating here are the choices you made:\n          </p>\n          {props.displayChoices()}\n      </div>\n      \n      \n    )\n  }\n\n  class Example extends React.Component {\n    onListChanged(selected) {\n        this.setState({\n        selected: selected\n        });\n        this.props.updateSelected(selected);\n    }\n    render() {\n      return (\n        <div className=\"column\">\n            <h1 className=\"title\">{this.props.title}</h1>\n            <SelectableCardList \n              multiple={this.props.multiple}\n              maxSelectable={this.props.maxSelectable}\n              contents={this.props.cardContents}\n              onChange={this.onListChanged.bind(this)}/>\n              {/* On click we want to move to the next choice and store this information.\n              I think we can use _next but we need to add in the info for the choices */}\n            <button className=\"card\" onClick={this.props.submitChoice}>\n              Choose option\n            </button>\n        </div>);\n    }\n  }\n  \n\n    \n  \n//   ReactDOM.render(<MasterForm />, document.getElementById('root'))\nexport default MasterForm;"]},"metadata":{},"sourceType":"module"}