{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/ape_code/src/Card.js\";\nimport React from 'react';\nimport BarChart from './BarChart';\nimport './Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nclass SelectableCard extends React.Component {\n  render() {\n    var isSelected = this.props.selected ? \"selected\" : \"\";\n    var className = \"selectable \" + isSelected;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        onClick: this.props.onClick,\n        children: [this.props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass SelectableTitleCard extends React.Component {\n  render() {\n    var {\n      title,\n      description,\n      selected,\n      data\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-6\",\n      children: /*#__PURE__*/_jsxDEV(SelectableCard, {\n        onClick: this.props.onClick,\n        selected: selected,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass SelectableCardList extends React.Component {\n  constructor(props) {\n    super(props);\n    var selected = props.multiple ? [] : -1;\n    var initialState = {\n      selected: selected\n    };\n    this.state = initialState;\n  }\n\n  onItemSelected(index) {\n    this.setState((prevState, props) => {\n      if (props.multiple) {\n        var selectedIndexes = prevState.selected;\n        var selectedIndex = selectedIndexes.indexOf(index);\n\n        if (selectedIndex > -1) {\n          selectedIndexes.splice(selectedIndex, 1);\n          props.onChange(selectedIndexes);\n        } else {\n          if (!(selectedIndexes.length >= props.maxSelectable)) {\n            selectedIndexes.push(index);\n            props.onChange(selectedIndexes);\n          }\n        }\n\n        return {\n          selected: selectedIndexes\n        };\n      } else {\n        props.onChange(index);\n        return {\n          selected: index\n        };\n      }\n    });\n  }\n\n  render() {\n    var {\n      contents,\n      multiple\n    } = this.props;\n    var content = contents.map((cardContent, i) => {\n      var {\n        title,\n        description,\n        data,\n        selected\n      } = cardContent;\n      var selected = multiple ? this.state.selected.indexOf(i) > -1 : this.state.selected === i;\n      return /*#__PURE__*/_jsxDEV(SelectableTitleCard, {\n        title: title,\n        description: description,\n        data: data,\n        selected: selected,\n        onClick: e => this.onItemSelected(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardlist\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this);\n  }\n\n} //   class Example extends React.Component {\n//     onListChanged(selected) {\n//       this.setState({\n//         selected: selected\n//       });\n//     }\n//     submit() {\n//       window.alert(\"Selected: \" + this.state.selected);\n//     }\n//     render() {\n//       return (\n//         <div className=\"column\">\n//             <h1 className=\"title\">{this.props.title}</h1>\n//             <SelectableCardList \n//               multiple={this.props.multiple}\n//               maxSelectable={this.props.maxSelectable}\n//               contents={this.props.cardContents}\n//               onChange={this.onListChanged.bind(this)}/>\n//             <button className=\"card\" onClick={(e) => this.submit() }>\n//               Get selected\n//             </button>\n//         </div>);\n//     }\n//   }\n//   var teams = [{\n//     title: \"FC Barcelona\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Real Madrid\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Bayern Munich\",\n//     description: \"Germany\"\n//   }, {\n//     title: \"Juventus\",\n//     description: \"Italy\"\n//   }];\n//   var genres = [{\n//     title: \"Google\",\n//     description: \"Mountain View, CA\"\n//   }, {\n//     title: \"Apple\",\n//     description: \"Cupertino, CA\"\n//   }, {\n//     title: \"Microsoft\",\n//     description: \"Redmond, WA\"\n//   }, {\n//     title: \"Facebook\",\n//     description: \"Menlo Park, CA\"\n//   }];\n//   class App extends React.Component {\n//     render() {\n//       return (\n//         <div>\n//           <Example title=\"Pick a team\" cardContents={teams} />\n//           <Example title=\"Choose brands (3 max)\" cardContents={genres} multiple maxSelectable={3} />\n//         </div>\n//       );\n//     }\n//   }\n\n\nexport default SelectableCardList;","map":{"version":3,"sources":["/Users/patrick/ape_code/src/Card.js"],"names":["React","BarChart","Card","Component","render","props","children","SelectableCard","isSelected","selected","className","onClick","SelectableTitleCard","title","description","data","SelectableCardList","constructor","multiple","initialState","state","onItemSelected","index","setState","prevState","selectedIndexes","selectedIndex","indexOf","splice","onChange","length","maxSelectable","push","contents","content","map","cardContent","i","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BarChart from './BarChart';\nimport './Card.scss'\n\nclass Card extends React.Component {\n    render() {\n      return (<div className=\"card\">{this.props.children}</div>)\n    }\n  }\n  \n  class SelectableCard extends React.Component {\n  \n    render() {\n      var isSelected = this.props.selected ? \"selected\" : \"\";\n      var className = \"selectable \" + isSelected;\n      return (\n        <Card>\n          <div className={className} onClick={this.props.onClick}>\n            {this.props.children}\n            <div className=\"check\"><span className=\"checkmark\">✔</span></div>\n          </div>\n        </Card>\n      );\n    }\n  }\n  \n  class SelectableTitleCard extends React.Component {\n  \n    render() {\n      var {\n        title,\n        description,\n        selected,\n        data\n      } = this.props;\n      return (\n        \n          <div className=\"col-lg-6\">\n            <SelectableCard onClick={this.props.onClick}\n              selected={selected}>\n              <div className=\"content\">\n                <h1 className=\"title\">{title}</h1>\n                <p className=\"description\">{description}</p>\n                <BarChart data={data}/>\n              </div>\n            </SelectableCard>\n          </div>\n        \n      );\n    }\n  }\n  \n  class SelectableCardList extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      var selected = props.multiple ? [] : -1;\n      var initialState = {\n        selected: selected\n      };\n      this.state = initialState;\n    }\n  \n    onItemSelected(index) {\n      this.setState((prevState, props) => {\n        if (props.multiple) {\n          var selectedIndexes = prevState.selected;\n          var selectedIndex = selectedIndexes.indexOf(index);\n          if (selectedIndex > -1) {\n            selectedIndexes.splice(selectedIndex, 1);\n            props.onChange(selectedIndexes);\n          } else {\n            if (!(selectedIndexes.length >= props.maxSelectable)) {\n              selectedIndexes.push(index);\n              props.onChange(selectedIndexes);\n            }\n          }\n          return {\n            selected: selectedIndexes\n          };\n        } else {\n          props.onChange(index);\n          return {\n            selected: index\n          }\n        }\n      });\n    }\n  \n    render() {\n      var {\n        contents,\n        multiple\n      } = this.props;\n  \n      var content = contents.map((cardContent, i) => {\n        var {\n          title,\n          description,\n          data,\n          selected\n        } = cardContent;\n        var selected = multiple ? this.state.selected.indexOf(i) > -1 : this.state.selected === i;\n        return (\n          \n            <SelectableTitleCard key={i} \n            title={title} description={description} data={data}\n            selected={selected} \n            onClick={(e) => this.onItemSelected(i)} />\n          \n        );\n      });\n      return (\n          <div className=\"cardlist\">\n            <div className=\"row\">\n              {content}\n            </div>\n          </div>\n      );\n    }\n  }\n  \n//   class Example extends React.Component {\n//     onListChanged(selected) {\n//       this.setState({\n//         selected: selected\n//       });\n//     }\n//     submit() {\n//       window.alert(\"Selected: \" + this.state.selected);\n//     }\n//     render() {\n//       return (\n//         <div className=\"column\">\n//             <h1 className=\"title\">{this.props.title}</h1>\n//             <SelectableCardList \n//               multiple={this.props.multiple}\n//               maxSelectable={this.props.maxSelectable}\n//               contents={this.props.cardContents}\n//               onChange={this.onListChanged.bind(this)}/>\n//             <button className=\"card\" onClick={(e) => this.submit() }>\n//               Get selected\n//             </button>\n//         </div>);\n//     }\n//   }\n  \n  \n//   var teams = [{\n//     title: \"FC Barcelona\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Real Madrid\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Bayern Munich\",\n//     description: \"Germany\"\n//   }, {\n//     title: \"Juventus\",\n//     description: \"Italy\"\n//   }];\n  \n//   var genres = [{\n//     title: \"Google\",\n//     description: \"Mountain View, CA\"\n//   }, {\n//     title: \"Apple\",\n//     description: \"Cupertino, CA\"\n//   }, {\n//     title: \"Microsoft\",\n//     description: \"Redmond, WA\"\n//   }, {\n//     title: \"Facebook\",\n//     description: \"Menlo Park, CA\"\n//   }];\n  \n//   class App extends React.Component {\n//     render() {\n//       return (\n//         <div>\n//           <Example title=\"Pick a team\" cardContents={teams} />\n//           <Example title=\"Choose brands (3 max)\" cardContents={genres} multiple maxSelectable={3} />\n//         </div>\n//       );\n//     }\n//   }\nexport default SelectableCardList;"]},"metadata":{},"sourceType":"module"}