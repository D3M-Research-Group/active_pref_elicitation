{"version":3,"sources":["BarChart.js","hooks/useD3.js","Card.js","Form.js","reportWebVitals.js","index.js"],"names":["BarChart","data","ref","renderChartFn","dependencies","React","useRef","useEffect","d3","current","useD3","svg","margin","x","domain","map","d","year","rangeRound","padding","y1","sales","select","call","g","attr","tickValues","width","filter","v","undefined","tickSizeOuter","style","ticks","remove","append","text","selectAll","join","bandwidth","length","height","marginRight","marginLeft","className","Card","this","props","children","Component","SelectableCard","selected","onClick","SelectableTitleCard","title","description","SelectableCardList","initialState","multiple","state","index","setState","prevState","selectedIndexes","selectedIndex","indexOf","splice","onChange","maxSelectable","push","contents","content","cardContent","i","e","onItemSelected","MasterForm","handleChange","event","target","name","value","handleSubmit","preventDefault","email","username","password","alert","_start_questions","currentStep","maxSteps","_restart","userChoices","displayChoices","choice1","choice2","choice3","choiceData","submitChoice","console","log","finalSubmit","_next","_chooseA","_chooseB","updateSelected","bind","graphData","efficiency","_goToEnd","type","Fragment","StartPage","Step1","Step2","Step3","EndPage","restart","cardContents","Example","onListChanged","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15eaf2b7.chunk.js","sourcesContent":["import { useD3 } from './hooks/useD3';\n\nimport React from 'react';\n\nimport * as d3 from 'd3';\n\n\nfunction BarChart({ data }) {\n\n  const ref = useD3(\n\n    (svg) => {\n\n      const height = 500;\n\n      const width = 500;\n\n      const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n\n      const x = d3\n\n        .scaleBand()\n\n        .domain(data.map((d) => d.year))\n\n        .rangeRound([margin.left, width - margin.right])\n\n        .padding(0.1);\n\n\n      const y1 = d3\n\n        .scaleLinear()\n\n        .domain([0, d3.max(data, (d) => d.sales)])\n\n        .rangeRound([height - margin.bottom, margin.top]);\n\n\n      const xAxis = (g) =>\n\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n\n          d3\n\n            .axisBottom(x)\n\n            .tickValues(\n\n              d3\n\n                .ticks(...d3.extent(x.domain()), width / 40)\n\n                .filter((v) => x(v) !== undefined)\n\n            )\n\n            .tickSizeOuter(0)\n\n        );\n\n\n      const y1Axis = (g) =>\n\n        g\n\n          .attr(\"transform\", `translate(${margin.left},0)`)\n\n          .style(\"color\", \"steelblue\")\n\n          .call(d3.axisLeft(y1).ticks(null, \"s\"))\n\n          .call((g) => g.select(\".domain\").remove())\n\n          .call((g) =>\n\n            g\n\n              .append(\"text\")\n\n              .attr(\"x\", -margin.left)\n\n              .attr(\"y\", 10)\n\n              .attr(\"fill\", \"currentColor\")\n\n              .attr(\"text-anchor\", \"start\")\n\n              .text(data.y1)\n\n          );\n\n\n      svg.select(\".x-axis\").call(xAxis);\n\n      svg.select(\".y-axis\").call(y1Axis);\n\n\n      svg\n\n        .select(\".plot-area\")\n\n        .attr(\"fill\", \"steelblue\")\n\n        .selectAll(\".bar\")\n\n        .data(data)\n\n        .join(\"rect\")\n\n        .attr(\"class\", \"bar\")\n\n        .attr(\"x\", (d) => x(d.year))\n\n        .attr(\"width\", x.bandwidth())\n\n        .attr(\"y\", (d) => y1(d.sales))\n\n        .attr(\"height\", (d) => y1(0) - y1(d.sales));\n\n    },\n\n    [data.length]\n\n  );\n\n\n  return (\n\n    <svg\n\n      ref={ref}\n\n      style={{\n\n        height: 500,\n\n        width: \"100%\",\n\n        marginRight: \"0px\",\n\n        marginLeft: \"0px\",\n\n      }}\n\n    >\n\n      <g className=\"plot-area\" />\n\n      <g className=\"x-axis\" />\n\n      <g className=\"y-axis\" />\n\n    </svg>\n\n  );\n\n}\n\n\nexport default BarChart;","import React from 'react';\n\nimport * as d3 from 'd3';\n\n\nexport const useD3 = (renderChartFn, dependencies) => {\n\n    const ref = React.useRef();\n\n\n    React.useEffect(() => {\n\n        renderChartFn(d3.select(ref.current));\n\n        return () => {};\n\n      }, dependencies);\n\n    return ref;\n\n}","import React from 'react';\nimport BarChart from './BarChart';\nimport './Card.scss'\n\nclass Card extends React.Component {\n    render() {\n      return (<div className=\"card\">{this.props.children}</div>)\n    }\n  }\n  \n  class SelectableCard extends React.Component {\n  \n    render() {\n      var isSelected = this.props.selected ? \"selected\" : \"\";\n      var className = \"selectable \" + isSelected;\n      return (\n        <Card>\n          <div className={className} onClick={this.props.onClick}>\n            {this.props.children}\n            <div className=\"check\"><span className=\"checkmark\">✔</span></div>\n          </div>\n        </Card>\n      );\n    }\n  }\n  \n  class SelectableTitleCard extends React.Component {\n  \n    render() {\n      var {\n        title,\n        description,\n        selected,\n        data\n      } = this.props;\n      return (\n        \n          <div className=\"col-lg-6\">\n            <SelectableCard onClick={this.props.onClick}\n              selected={selected}>\n              <div className=\"content\">\n                <h1 className=\"title\">{title}</h1>\n                <p className=\"description\">{description}</p>\n                <BarChart data={data}/>\n              </div>\n            </SelectableCard>\n          </div>\n        \n      );\n    }\n  }\n  \n  class SelectableCardList extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      var selected = props.multiple ? [] : -1;\n      var initialState = {\n        selected: selected\n      };\n      this.state = initialState;\n    }\n  \n    onItemSelected(index) {\n      this.setState((prevState, props) => {\n        if (props.multiple) {\n          var selectedIndexes = prevState.selected;\n          var selectedIndex = selectedIndexes.indexOf(index);\n          if (selectedIndex > -1) {\n            selectedIndexes.splice(selectedIndex, 1);\n            props.onChange(selectedIndexes);\n          } else {\n            if (!(selectedIndexes.length >= props.maxSelectable)) {\n              selectedIndexes.push(index);\n              props.onChange(selectedIndexes);\n            }\n          }\n          return {\n            selected: selectedIndexes\n          };\n        } else {\n          props.onChange(index);\n          return {\n            selected: index\n          }\n        }\n      });\n    }\n  \n    render() {\n      var {\n        contents,\n        multiple\n      } = this.props;\n  \n      var content = contents.map((cardContent, i) => {\n        var {\n          title,\n          description,\n          data,\n          selected\n        } = cardContent;\n        var selected = multiple ? this.state.selected.indexOf(i) > -1 : this.state.selected === i;\n        return (\n          \n            <SelectableTitleCard key={i} \n            title={title} description={description} data={data}\n            selected={selected} \n            onClick={(e) => this.onItemSelected(i)} />\n          \n        );\n      });\n      return (\n          <div className=\"cardlist\">\n            <div className=\"row\">\n              {content}\n            </div>\n          </div>\n      );\n    }\n  }\n  \n//   class Example extends React.Component {\n//     onListChanged(selected) {\n//       this.setState({\n//         selected: selected\n//       });\n//     }\n//     submit() {\n//       window.alert(\"Selected: \" + this.state.selected);\n//     }\n//     render() {\n//       return (\n//         <div className=\"column\">\n//             <h1 className=\"title\">{this.props.title}</h1>\n//             <SelectableCardList \n//               multiple={this.props.multiple}\n//               maxSelectable={this.props.maxSelectable}\n//               contents={this.props.cardContents}\n//               onChange={this.onListChanged.bind(this)}/>\n//             <button className=\"card\" onClick={(e) => this.submit() }>\n//               Get selected\n//             </button>\n//         </div>);\n//     }\n//   }\n  \n  \n//   var teams = [{\n//     title: \"FC Barcelona\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Real Madrid\",\n//     description: \"Spain\"\n//   }, {\n//     title: \"Bayern Munich\",\n//     description: \"Germany\"\n//   }, {\n//     title: \"Juventus\",\n//     description: \"Italy\"\n//   }];\n  \n//   var genres = [{\n//     title: \"Google\",\n//     description: \"Mountain View, CA\"\n//   }, {\n//     title: \"Apple\",\n//     description: \"Cupertino, CA\"\n//   }, {\n//     title: \"Microsoft\",\n//     description: \"Redmond, WA\"\n//   }, {\n//     title: \"Facebook\",\n//     description: \"Menlo Park, CA\"\n//   }];\n  \n//   class App extends React.Component {\n//     render() {\n//       return (\n//         <div>\n//           <Example title=\"Pick a team\" cardContents={teams} />\n//           <Example title=\"Choose brands (3 max)\" cardContents={genres} multiple maxSelectable={3} />\n//         </div>\n//       );\n//     }\n//   }\nexport default SelectableCardList;","import React from 'react';\nimport SelectableCardList from \"./Card\"\nimport './Form.css';\n\nclass MasterForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        currentStep: 0,\n        userChoices: [],\n        selected: -1\n      }\n      this.maxSteps = 3;\n      this.updateSelected = this.updateSelected.bind(this);\n      this.submitChoice = this.submitChoice.bind(this);\n\n      this.graphData = [\n        {year: 1980, efficiency: 24.3, sales: 8949000},\n      \n        {year: 1985, efficiency: 27.6, sales: 10979000},\n      \n        {year: 1990, efficiency: 28, sales: 9303000},\n      \n        {year: 1991, efficiency: 28.4, sales: 8185000},\n      \n        {year: 1992, efficiency: 27.9, sales: 8213000},\n      \n        {year: 1993, efficiency: 28.4, sales: 8518000},\n      \n        {year: 1994, efficiency: 28.3, sales: 8991000},\n      \n        {year: 1995, efficiency: 28.6, sales: 8620000},\n      \n        {year: 1996, efficiency: 28.5, sales: 8479000},\n      \n        {year: 1997, efficiency: 28.7, sales: 8217000},\n      \n        {year: 1998, efficiency: 28.8, sales: 8085000},\n      \n        {year: 1999, efficiency: 28.3, sales: 8638000},\n      \n        {year: 2000, efficiency: 28.5, sales: 8778000},\n      \n        {year: 2001, efficiency: 28.8, sales: 8352000},\n      \n        {year: 2002, efficiency: 29, sales: 8042000},\n      \n        {year: 2003, efficiency: 29.5, sales: 7556000},\n      \n        {year: 2004, efficiency: 29.5, sales: 7483000},\n      \n        {year: 2005, efficiency: 30.3, sales: 7660000},\n      \n        {year: 2006, efficiency: 30.1, sales: 7762000},\n      \n        {year: 2007, efficiency: 31.2, sales: 7562000},\n      \n        {year: 2008, efficiency: 31.5, sales: 6769000},\n      \n        {year: 2009, efficiency: 32.9, sales: 5402000},\n      \n        {year: 2010, efficiency: 33.9, sales: 5636000},\n      \n        {year: 2011, efficiency: 33.1, sales: 6093000},\n      \n        {year: 2012, efficiency: 35.3, sales: 7245000},\n      \n        {year: 2013, efficiency: 36.4, sales: 7586000},\n      \n        {year: 2014, efficiency: 36.5, sales: 7708000},\n      \n        {year: 2015, efficiency: 37.2, sales: 7517000},\n      \n        {year: 2016, efficiency: 37.7, sales: 6873000},\n      \n        {year: 2017, efficiency: 39.4, sales: 6081000},\n      \n      ]\n    \n      this.choiceData = [\n        [{\n          title: \"FC Barcelona\",\n          description: \"Spain\",\n          data: this.graphData\n        }, {\n          title: \"Bayern Munich\",\n          description: \"Germany\",\n          data: this.graphData\n        }],\n        [{\n          title: \"Apple\",\n          description: \"Cupertino, CA\",\n          data: this.graphData\n        }, {\n            title: \"Microsoft\",\n            description: \"Redmond, WA\",\n            data: this.graphData\n        }],\n        [{\n          title: \"Apples\",\n            description: \"some text\",\n            data: this.graphData\n        },{\n            title: \"Oranges\",\n            description: \"Cara cara\",\n            data: this.graphData\n        }]\n      ];\n    }\n  \n    handleChange = event => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })    \n    }\n     \n    handleSubmit = event => {\n      event.preventDefault()\n      const { email, username, password } = this.state\n      alert(`Your registration detail: \\n \n             Email: ${email} \\n \n             Username: ${username} \\n\n             Password: ${password}`)\n    }\n    \n    // _next = () => {\n    _start_questions = () => {\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep >= this.maxSteps-1? this.maxSteps: currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n    _next(){\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep >= this.maxSteps-1? this.maxSteps: currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }\n\n    _goToEnd(){\n      let currentStep = this.state.currentStep;\n      if(currentStep === this.maxSteps){\n        // update current step to go to end page\n        this.setState({\n          currentStep: this.maxSteps + 1\n        })\n      }\n    }\n\n    _restart = () => {\n      this.setState({\n        currentStep: 0,\n        userChoices: [],\n        selected: -1\n      })\n    }\n\n    updateSelected(selected){\n        this.setState({\n        selected: selected\n        })\n    }\n\n    finalSubmit(){\n        let [choice1, choice2, choice3] = this.state.userChoices;\n        alert(`Your choices: \\n \n             Choice 1: ${this.choiceData[0][choice1]['title']} \\n \n             Choice 2: ${this.choiceData[1][choice2]['title']} \\n\n             Choice 3: ${this.choiceData[2][choice3]['title']} \\n\n        This is where we will send the results back to the server`);\n        this._goToEnd();\n    }\n\n    displayChoices = () => {\n      let [choice1, choice2, choice3] = this.state.userChoices;\n        return(\n          <ul>\n            <li>\n              Choice 1: {this.choiceData[0][choice1]['title']}\n            </li>\n            <li>\n              Choice 2: {this.choiceData[1][choice2]['title']}\n            </li>\n            <li>\n              Choice 3: {this.choiceData[2][choice3]['title']}\n            </li>\n            \n          </ul>\n          \n          );\n    }\n\n    submitChoice = () => {\n        console.log(this.state.selected);\n        this.state.userChoices.push(this.state.selected);\n        console.log(this.state.userChoices);\n        if(this.state.currentStep === this.maxSteps){\n          // then we want to submit the results\n          this.finalSubmit();\n        } else{\n          // move to next question\n          this._next();\n        }\n        \n    }\n\n    _chooseA = () => {\n        alert(\n            `You chose option A!`\n        )\n    }\n\n    _chooseB = () => {\n        alert(\n            `You chose option B!`\n        )\n    }\n      \n    nextButton(){\n        let currentStep = this.state.currentStep;\n        if(currentStep <3){\n        return (\n            <button \n            className=\"btn btn-primary float-right\" \n            type=\"button\" onClick={this._next}>\n            Next\n            </button>        \n        )\n        }\n        return null;\n    }\n    \n    render() {    \n      return (\n        <React.Fragment>\n        <h1>Active Preference Elicitation 🔮 </h1>\n        {/* Only show the step once current step > 0 */}\n        <p>Step {this.state.currentStep} </p> \n  \n        {/* <form onSubmit={this.handleSubmit}> */}\n        {/* <form> */}\n        {/* \n          render the form steps and pass required props in\n        */}\n          <StartPage\n            currentStep={this.state.currentStep} \n            _start_questions={this._start_questions}\n          />\n          <Step1 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            email={this.state.email}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step2 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            username={this.state.username}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n          <Step3 \n            currentStep={this.state.currentStep} \n            handleChange={this.handleChange}\n            password={this.state.password}\n            data={this.choiceData[this.state.currentStep -1]}\n            updateSelected={this.updateSelected}\n            submitChoice={this.submitChoice}\n          />\n\n          <EndPage\n            currentStep={this.state.currentStep}\n            displayChoices={this.displayChoices}\n            maxSteps={this.maxSteps}\n            restart={this._restart}\n          />\n          {/* {this.previousButton()} */}\n          {/* {this.nextButton()} */}\n  \n        {/* </form> */}\n        </React.Fragment>\n      );\n    }\n  }\n  \n  function Step1(props) {\n    if (props.currentStep !== 1) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            <Example title=\"Pick a team\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n        \n            \n      \n      \n    );\n  }\n  \n  function Step2(props) {\n    if (props.currentStep !== 2) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n            <Example title=\"Pick a company\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n        </div>\n      \n    );\n  }\n  \n  function Step3(props) {\n    if (props.currentStep !== 3) {\n      return null\n    } \n    return(\n      <div className=\"container\">\n        <Example title=\"Pick a fruit\" cardContents={props.data} \n            submitChoice={props.submitChoice}\n            updateSelected={props.updateSelected} />\n      </div>\n    )\n  }\n\n  function StartPage(props){\n    if (props.currentStep !== 0) {\n      return null\n    } \n    return(\n      <div className=\"container\">\n          <h1 className=\"title\">Welcome!</h1>\n          <p>\n            Click on the \"Start\" button to start answering the questions\n          </p>\n\n          <button \n            className=\"btn btn-primary\" \n            type=\"button\" onClick={props._start_questions}>\n            Start\n            </button>                  \n      </div>\n    )\n  }\n\n  function EndPage(props) {\n    console.log(props.currentStep)\n    if (props.currentStep !== props.maxSteps + 1) {\n      return null\n    } \n    return(\n        <div className=\"container\">\n          <h1 className=\"title\">All done!</h1>\n          <p>\n            Thanks for particpating here are the choices you made:\n          </p>\n          {props.displayChoices()}\n\n          <button \n            className=\"btn btn-primary\" \n            type=\"button\" onClick={props.restart}>\n            Take again\n            </button>                  \n      </div>\n      \n      \n    )\n  }\n\n  class Example extends React.Component {\n    onListChanged(selected) {\n        this.setState({\n        selected: selected\n        });\n        this.props.updateSelected(selected);\n    }\n    render() {\n      return (\n        <div className=\"column\">\n            <h1 className=\"title\">{this.props.title}</h1>\n            <SelectableCardList \n              multiple={this.props.multiple}\n              maxSelectable={this.props.maxSelectable}\n              contents={this.props.cardContents}\n              onChange={this.onListChanged.bind(this)}/>\n              {/* On click we want to move to the next choice and store this information.\n              I think we can use _next but we need to add in the info for the choices */}\n            <button className=\"card\" onClick={this.props.submitChoice}>\n              Choose option\n            </button>\n        </div>);\n    }\n  }\n  \n\n    \n  \n//   ReactDOM.render(<MasterForm />, document.getElementById('root'))\nexport default MasterForm;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport MasterForm from './Form'\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <MasterForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}